# -*- coding: utf-8 -*-
"""Ukraine_TwitterDataCollection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rlBkUBzJopnpm6EkHQ0pySKKAgfW0QOZ

# Download of relevant tweets
This code downloads the relevant tweets from Twitter, covering the time period from 01/01/2022 until 26/03/2023. Since we had too many search queries to put them into one single search query (which is limited at 1024 characters), we had to split it up into 4 individual search queries.

In the following section we set things up for the collection to work: installation, authentification, etc.
"""

## install the libraries
!pip install twitterexplorer

#mount drive
from google.colab import drive
drive.mount('/content/my_drive')

## load the twitter-explorer
import os
import getpass
from twitterexplorer.tweetcollector import Collector
import datetime as dt

# getting the bearer-token
print("Enter your Twitter API v2 Bearer Token")
bearer_token = getpass.getpass()

"""Query 1:"""

## Defining search query 1
search_query = "((Waffenlieferung Ukraine) OR (Waffen-Lieferungen Ukraine) OR (Waffen-Lieferung Ukraine) OR (Waffenlieferungen Ukraine) OR (Waffen Ukraine) OR (Helme Ukraine) OR (Helm Ukraine) OR (Panzerfäuste Ukraine) OR (Panzer Fäuste Ukraine) OR (Panzerfaust Ukraine) OR (Panzer Faust Ukraine) OR (Pzf Ukraine) OR (pzf3 Ukraine) OR (Stringerraketen Ukraine) OR (Stinger-Raketen Ukraine) OR (Stinger Raketen Ukraine) OR (Flugabwehrrakete Ukraine) OR (Flugabwehr Ukraine) OR (Flugabwehr-Rakete Ukraine) OR (Flugabwehrsystem Ukraine) OR (Flugabwehrsysteme Ukraine) OR (MANPAD Ukraine) OR (MANPADS Ukraine) OR (Strela Ukraine) OR (Strela-Raketen Ukraine) OR (Flugabwehrraketen Ukraine) OR (Panzerabwehrwaffen Ukraine) OR (Panzer-Abwehrwaffen Ukraine) OR (Luftabwehr Ukraine) OR (Luftabwehrgeräte Ukraine) OR (Luft-Abwehr Ukraine)) lang:de"

## instantiate the collector
collector = Collector(streamlit_interface=False)

## authenticate
collector.authenticate(api_version="v2_academic_research", #or v2_academic_research
                       bearer_token=bearer_token
                      )

## set search parameters
collector.set_parameters_v2(search_query=search_query,
                            sinceid=None,
                            untilid=None,
                            start_time=dt.datetime.strptime("2022-01-01", '%Y-%m-%d'),
                            end_time=dt.datetime.strptime("2023-03-26", '%Y-%m-%d'),
                            page_limit=None,
                            tweet_limit=None,                          
                            save_csv=True,                          
                            save_full_api_response=True,
                            output_directory="my_drive/MyDrive/twitter/data/",
                            custom_save_name="Query_1_data",
                           )

## start the collection
collector.start()

"""Query 2: """

## Defining search query 2
search_query = "((Luftabwehr-Geräte Ukraine) OR (Munition Ukraine) OR (T72 Ukraine) OR (Radpanzer Ukraine) OR (Radpanzer Fuchs Ukraine) OR (Schützenpanzer Ukraine) OR (Schützen-Panzer Ukraine) OR (Schutzenpanzer Ukraine) OR (Marder Ukraine) OR (Fuchs Ukraine) OR (Ringtausch Ukraine) OR (Ringtausch Slovenien) OR (Ringtausch Slovenisch) OR (Ringtausch slovenische) OR (Ringtausch slovenischer) OR (Ringtausch slovenisches) OR (Gepard Ukraine) OR (Flakpanzer Ukraine) OR (FlakPz Ukraine) OR (Flugabwehrkanonenpanzer Ukraine) OR (Flak-panzer Ukraine) OR (schwere Waffen Ukraine) OR (schwerer Waffen Ukraine) OR (Panzerhaubitzen Ukraine) OR (Panzer-Haubitzen Ukraine) OR (pzh2000 Ukraine) OR (pzh Ukraine) OR (PZH 2000 Ukraine) OR (Ringtausch Polen) OR (polnische Ringtausch) OR (polnisch Ringtausch) OR (polnischer Ringtausch) OR (polnisches Ringtausch)) lang:de"

## Search Query 2
##instantiate the collector
collector = Collector(streamlit_interface=False)

## authenticate
collector.authenticate(api_version="v2_academic_research", #or v2_academic_research
                       bearer_token=bearer_token
                      )

## set search parameters
collector.set_parameters_v2(search_query=search_query,
                            sinceid=None,
                            untilid=None,
                            start_time=dt.datetime.strptime("2022-01-01", '%Y-%m-%d'),
                            end_time=dt.datetime.strptime("2023-03-26", '%Y-%m-%d'),
                            page_limit=None,
                            tweet_limit=None,                          
                            save_csv=True,                          
                            save_full_api_response=True,
                            output_directory="my_drive/MyDrive/twitter/data/",
                            custom_save_name="Query_2_data",
                           )

## start the collection
collector.start()

"""Query 3: """

## Defining search query 3
search_query = "((Ringtausch Tschechien) OR (tschechisch Ringtausch) OR (tschechische Ringtausch) OR (tschechischer Ringtausch) OR (tschechisches Ringtausch) OR (Tschechen Ringtausch) OR (T72 Ukraine) OR (Leopard 2 Ukraine) OR (Leo2 Ukraine) OR (Leo Ukraine) OR (Ringtausch griechenland) OR (Griechen Ringtausch) OR (griechisch Ringtausch) OR (griechische Ringtausch) OR (griechischer Ringtausch) OR (BMP Ukraine) OR (BMP1 Ukraine) OR (Flugabwehr-Systeme Ukraine) OR (Flugabwehr-System Ukraine) OR (Iris-T SLM Ukraine) OR (Iris T SLM Ukraine) OR (IrisT SLM Ukraine) OR (IrisTSLM Ukraine) OR (Iris TSLM Ukraine)) lang:de"

## Search Query 3
##instantiate the collector
collector = Collector(streamlit_interface=False)

## authenticate
collector.authenticate(api_version="v2_academic_research", #or v2_academic_research
                       bearer_token=bearer_token
                      )

## set search parameters
collector.set_parameters_v2(search_query=search_query,
                            sinceid=None,
                            untilid=None,
                            start_time=dt.datetime.strptime("2022-01-01", '%Y-%m-%d'),
                            end_time=dt.datetime.strptime("2023-03-26", '%Y-%m-%d'),
                            page_limit=None,
                            tweet_limit=None,                          
                            save_csv=True,                          
                            save_full_api_response=True,
                            output_directory="my_drive/MyDrive/twitter/data/",
                            custom_save_name="Query_3_data",
                           )

## start the collection
collector.start()

"""Query 4: """

## Defining search query 4
search_query = "((Iris Ukraine) OR (Raketenwerfer Ukraine) OR (Mars II Ukraine) OR (Raketen-Werfer Ukraine) OR (Mars 2 Ukraine) OR (Mars Panzer Ukraine) OR (leichte Waffen Ukraine) OR (leichter Waffen Ukraine) OR (Panzer-Lieferungen Ukraine) OR (Panzer-Lieferung Ukraine) OR (Panzerlieferungen Ukraine) OR (Panzerlieferung Ukraine) OR (Marder-Schützenpanzer Ukraine) OR (Patriot Ukraine) OR (Patriot-Flugabwehrsystem Ukraine) OR (Patriot-Flugabwehr-System Ukraine) OR (Leopard-Panzer Ukraine) OR (Leopard 2 Ukraine) OR (Leopard2-Panzer Ukraine) OR (Leopard II Ukraine) OR (Leopard 2-Panzer Ukraine)) lang:de"

## Search Query 4
##instantiate the collector
collector = Collector(streamlit_interface=False)

## authenticate
collector.authenticate(api_version="v2_academic_research", #or v2_academic_research
                       bearer_token=bearer_token
                      )

## set search parameters
collector.set_parameters_v2(search_query=search_query,
                            sinceid=None,
                            untilid=None,
                            start_time=dt.datetime.strptime("2022-01-01", '%Y-%m-%d'),
                            end_time=dt.datetime.strptime("2023-03-26", '%Y-%m-%d'),
                            page_limit=None,
                            tweet_limit=None,                          
                            save_csv=True,                          
                            save_full_api_response=True,
                            output_directory="my_drive/MyDrive/twitter/data/",
                            custom_save_name="Query_4_data",
                           )

## start the collection
collector.start()